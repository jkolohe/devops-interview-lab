# Optimized example with multi-stage and non-root user
# 1) Separate dependency build from runtime for better caching
# 2) Copy only what is needed using .dockerignore
# 3) Run as non-root
# 4) Use venv for smaller, reproducible runtime

# Builder stage: install deps into a virtualenv
FROM python:3.12-slim AS builder
WORKDIR /install
RUN python -m venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"
COPY app/requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# Final runtime image
FROM python:3.12-slim AS runtime
ENV VIRTUAL_ENV=/opt/venv
ENV PATH="$VIRTUAL_ENV/bin:$PATH"
WORKDIR /app

# Security: add non-root user
RUN useradd -m appuser
COPY --from=builder /opt/venv /opt/venv
COPY app /app
RUN chown -R appuser:appuser /app
USER appuser

EXPOSE 8000
CMD ["python", "app.py"]
